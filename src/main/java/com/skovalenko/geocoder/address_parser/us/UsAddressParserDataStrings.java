package com.skovalenko.geocoder.address_parser.us;

import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class UsAddressParserDataStrings {
	public static final Map<String, String> DIRECTION;

	public static final Map<String, String> STREET_NAMES;

	public static final Map<String, String> STREET_TYPE;

	public static final Map<String, String> SU_TYPES;

	public static final Map<String, String> USPS_STREET_TYPE;

	public static final Map<String, Integer> ALPHA_NUMERIC;

	public static final Set<String> NUMERIC_WORDS;

	public static final Set<String> STATE;

	public static final Set<String> STREET_SUFFIX;

	public static final Set<String> ROUTE_ALIASES;

	public static final Set<String> STREET_NAMES_EXCL;

	static {
		Map<String, String> tmpDir = new HashMap<String, String>();
		tmpDir.put("N", "N");
		tmpDir.put("S", "S");
		tmpDir.put("E", "E");
		tmpDir.put("W", "W");
		tmpDir.put("NW", "NW");
		tmpDir.put("NE", "NE");
		tmpDir.put("SW", "SW");
		tmpDir.put("SE", "SE");
		tmpDir.put("NORTH", "N");
		tmpDir.put("SOUTH", "S");
		tmpDir.put("EAST", "E");
		tmpDir.put("WEST", "W");
		tmpDir.put("NORTHWEST", "NW");
		tmpDir.put("NORTHEAST", "NE");
		tmpDir.put("SOUTHWEST", "SW");
		tmpDir.put("SOUTHEAST", "SE");
		DIRECTION = Collections.unmodifiableMap(tmpDir);
		Map<String, String> tmpStn = new HashMap<String, String>();
		tmpStn.put("AVE", "Avenue");
		STREET_NAMES = Collections.unmodifiableMap(tmpStn);
		Map<String, String> tmpStt = new HashMap<String, String>();
		tmpStt.put("ALLEE", "AL");
		tmpStt.put("ALLEY", "AL");
		tmpStt.put("ALLY", "AL");
		tmpStt.put("ALY", "AL");
		tmpStt.put("ANEX", "ANX");
		tmpStt.put("ANNEX", "ANX");
		tmpStt.put("ANNX", "ANX");
		tmpStt.put("ANX", "ANX");
		tmpStt.put("ARC", "ARC");
		tmpStt.put("ARCADE", "ARC");
		tmpStt.put("AV", "AVE");
		tmpStt.put("AE", "AVE");
		tmpStt.put("AVE", "AVE");
		tmpStt.put("AVEN", "AVE");
		tmpStt.put("AVENU", "AVE");
		tmpStt.put("AVENUE", "AVE");
		tmpStt.put("AVN", "AVE");
		tmpStt.put("AVNUE", "AVE");
		tmpStt.put("BAYOO", "BYU");
		tmpStt.put("BAYOU", "BYU");
		tmpStt.put("BCH", "BCH");
		tmpStt.put("BEACH", "BCH");
		tmpStt.put("BEND", "BND");
		tmpStt.put("BND", "BND");
		tmpStt.put("BG", "BRG");
		tmpStt.put("BGS", "BRG");
		tmpStt.put("BL", "BLF");
		tmpStt.put("BLF", "BLF");
		tmpStt.put("BLFS", "BLF");
		tmpStt.put("BLUF", "BLF");
		tmpStt.put("BLUFF", "BLF");
		tmpStt.put("BLUFFS", "BLF");
		tmpStt.put("BLV", "BLVD");
		tmpStt.put("BLVD", "BLVD");
		tmpStt.put("BLVRD", "BLVD");
		tmpStt.put("BO", "BTM");
		tmpStt.put("BOT", "BTM");
		tmpStt.put("BOTTM", "BTM");
		tmpStt.put("BOTTOM", "BTM");
		tmpStt.put("BOUL", "BLVD");
		tmpStt.put("BOULEVARD", "BLVD");
		tmpStt.put("BOULIVARD", "BLVD");
		tmpStt.put("BOULV", "BLVD");
		tmpStt.put("BOULVRD", "BLVD");
		tmpStt.put("BUL", "BLVD");
		tmpStt.put("BR", "BR");
		tmpStt.put("BRANCH", "BR");
		tmpStt.put("BRDGE", "BRG");
		tmpStt.put("BRG", "BRG");
		tmpStt.put("BRIDG", "BRG");
		tmpStt.put("BRIDGE", "BRG");
		tmpStt.put("BRK", "BRK");
		tmpStt.put("BRKS", "BRKS");
		tmpStt.put("BRNCH", "BR");
		tmpStt.put("BROOK", "BRK");
		tmpStt.put("BROOKS", "BRKS");
		tmpStt.put("BTM", "BTM");
		tmpStt.put("BURG", "BG");
		tmpStt.put("BURGS", "BG");
		tmpStt.put("BV", "BV");
		tmpStt.put("BYP", "BYP");
		tmpStt.put("BYPA", "BYP");
		tmpStt.put("BYPAS", "BYP");
		tmpStt.put("BYPASS", "BYP");
		tmpStt.put("BYPS", "BYP");
		tmpStt.put("BYU", "BYU");
		tmpStt.put("CAMP", "CP");
		tmpStt.put("CMP", "CP");
		tmpStt.put("CNYN", "CYN");
		tmpStt.put("CANYN", "CYN");
		tmpStt.put("CANYON", "CYN");
		tmpStt.put("CAPE", "CPE");
		tmpStt.put("CAUSEWAY", "CSWY");
		tmpStt.put("CAUSWAY", "CSWY");
		tmpStt.put("CNTER", "CTR");
		tmpStt.put("CNTR", "CTR");
		tmpStt.put("CEN", "CTR");
		tmpStt.put("CENT", "CTR");
		tmpStt.put("CENTER", "CTR");
		tmpStt.put("CENTERS", "CTR");
		tmpStt.put("CENTR", "CTR");
		tmpStt.put("CENTRE", "CTR");
		tmpStt.put("CFS", "CLF");
		tmpStt.put("CIR", "CIR");
		tmpStt.put("CIRC", "CIR");
		tmpStt.put("CIRCL", "CIR");
		tmpStt.put("CIRCLE", "CIR");
		tmpStt.put("CIRCLES", "CIRS");
		tmpStt.put("CIRS", "CIRS");
		tmpStt.put("CLB", "CLB");
		tmpStt.put("CLF", "CLF");
		tmpStt.put("CLFS", "CLFS");
		tmpStt.put("CLIFF", "CLF");
		tmpStt.put("CLIFFS", "CLFS");
		tmpStt.put("CLUB", "CLB");
		tmpStt.put("CMN", "CMN");
		tmpStt.put("CMNS", "CMNS");
		tmpStt.put("CMP", "CP");
		tmpStt.put("COMMON", "CMN");
		tmpStt.put("COMMONS", "CMNS");
		tmpStt.put("COR", "CR");
		tmpStt.put("CORNER", "CR");
		tmpStt.put("CORNERS", "CR");
		tmpStt.put("CORS", "CRSE");
		tmpStt.put("COURSE", "CRSE");
		tmpStt.put("COURT", "CT");
		tmpStt.put("CRT", "CT");
		tmpStt.put("COURTS", "CTS");
		tmpStt.put("COVE", "CV");
		tmpStt.put("COVES", "CVS");
		tmpStt.put("CP", "CPE");
		tmpStt.put("CPE", "CPE");
		tmpStt.put("CR", "CIR");
		tmpStt.put("CRCL", "CIR");
		tmpStt.put("CRCLE", "CIR");
		tmpStt.put("CRECENT", "CRES");
		tmpStt.put("CREEK", "CRK");
		tmpStt.put("CRES", "CRES");
		tmpStt.put("CRESCENT", "CRES");
		tmpStt.put("CRESENT", "CRES");
		tmpStt.put("CREST", "CRES");
		tmpStt.put("CRSCNT", "CRES");
		tmpStt.put("CRSE", "CRES");
		tmpStt.put("CRSENT", "CRES");
		tmpStt.put("CRSNT", "CRES");
		tmpStt.put("CRK", "CRK");
		tmpStt.put("CRL", "CIR");
		tmpStt.put("CROSSING", "CRSG");
		tmpStt.put("CROSSROAD", "XRD");
		tmpStt.put("CROSSROADS", "XRDS");
		tmpStt.put("CRSSNG", "CRSG");
		tmpStt.put("CSWY", "CSWY");
		tmpStt.put("CT", "CT");
		tmpStt.put("CTR", "CTR");
		tmpStt.put("CTRS", "CTRS");
		tmpStt.put("CTS", "CTRS");
		tmpStt.put("CURV", "CURV");
		tmpStt.put("CURVE", "CURV");
		tmpStt.put("CUT-OFF", "CO");
		tmpStt.put("CUTOFF", "CO");
		tmpStt.put("CV", "CURV");
		tmpStt.put("CVS", "CURV");
		tmpStt.put("CYN", "CYN");
		tmpStt.put("DALE", "DL");
		tmpStt.put("DAM", "DM");
		tmpStt.put("DIV", "DV");
		tmpStt.put("DIVIDE", "DV");
		tmpStt.put("DL", "DL");
		tmpStt.put("DM", "DM");
		tmpStt.put("DR", "DR");
		tmpStt.put("DRIV", "DR");
		tmpStt.put("DRIVE", "DR");
		tmpStt.put("DRIVES", "DRS");
		tmpStt.put("DRS", "DRS");
		tmpStt.put("DRV", "DR");
		tmpStt.put("DV", "DR");
		tmpStt.put("DVD", "DVD");
		tmpStt.put("EST", "EST");
		tmpStt.put("ESTATE", "EST");
		tmpStt.put("ESTATES", "ESTS");
		tmpStt.put("ESTS", "ESTS");
		tmpStt.put("EX", "EXWY");
		tmpStt.put("EXP", "EXWY");
		tmpStt.put("EXPR", "EXWY");
		tmpStt.put("EXPRESS", "EXWY");
		tmpStt.put("EXPRESSWAY", "EXWY");
		tmpStt.put("EXPW", "EXWY");
		tmpStt.put("EXPY", "EXWY");
		tmpStt.put("EXT", "EXT");
		tmpStt.put("EXTENSION", "EXT");
		tmpStt.put("EXTENSIONS", "EXTS");
		tmpStt.put("EXTN", "EXT");
		tmpStt.put("EXTNSN", "EXT");
		tmpStt.put("EXTS", "EXTS");
		tmpStt.put("FALL", "FL");
		tmpStt.put("FALLS", "FLS");
		tmpStt.put("FERRY", "FRY");
		tmpStt.put("FRRY", "FRY");
		tmpStt.put("FIELD", "FLD");
		tmpStt.put("FIELDS", "FLDS");
		tmpStt.put("FLAT", "FLT");
		tmpStt.put("FLATS", "FLTS");
		tmpStt.put("FLD", "FLD");
		tmpStt.put("FLDS", "FLDS");
		tmpStt.put("FLS", "FLDS");
		tmpStt.put("FLT", "FLT");
		tmpStt.put("FLTS", "FLTS");
		tmpStt.put("FORD", "FRD");
		tmpStt.put("FORDS", "FRDS");
		tmpStt.put("FRD", "FRD");
		tmpStt.put("FRDS", "FRDS");
		tmpStt.put("FOREST", "FRST");
		tmpStt.put("FORESTS", "FRST");
		tmpStt.put("FRST", "FRST");
		tmpStt.put("FORG", "FRG");
		tmpStt.put("FORGE", "FRG");
		tmpStt.put("FORGES", "FRGS");
		tmpStt.put("FRG", "FRG");
		tmpStt.put("FRGS", "FRGS");
		tmpStt.put("FORK", "FRK");
		tmpStt.put("FORKS", "FRKS");
		tmpStt.put("FRK", "FRK");
		tmpStt.put("FRKS", "FRKS");
		tmpStt.put("FORT", "FT");
		tmpStt.put("FRT", "FT");
		tmpStt.put("FT", "FT");
		tmpStt.put("FREEWAY", "FRWY");
		tmpStt.put("FREEWY", "FRWY");
		tmpStt.put("FRWAY", "FRWY");
		tmpStt.put("FRWY", "FRWY");
		tmpStt.put("FRY", "FRWY");
		tmpStt.put("FWY", "FRWY");
		tmpStt.put("GARDEN", "GDN");
		tmpStt.put("GARDENS", "GDNS");
		tmpStt.put("GARDN", "GDN");
		tmpStt.put("GDN", "GDN");
		tmpStt.put("GDNS", "GDNS");
		tmpStt.put("GR", "GDN");
		tmpStt.put("GRDEN", "GDN");
		tmpStt.put("GRDN", "GDN");
		tmpStt.put("GRDNS", "GDNS");
		tmpStt.put("GATEWAY", "GTWY");
		tmpStt.put("GATEWY", "GTWY");
		tmpStt.put("GATWAY", "GTWY");
		tmpStt.put("GTWAY", "GTWY");
		tmpStt.put("GTWY", "GTWY");
		tmpStt.put("GLEN", "GLN");
		tmpStt.put("GLENS", "GLNS");
		tmpStt.put("GLN", "GLN");
		tmpStt.put("GLNS", "GLNS");
		tmpStt.put("GREEN", "GRN");
		tmpStt.put("GREENE", "GRN");
		tmpStt.put("GREENS", "GRNS");
		tmpStt.put("GRN", "GRN");
		tmpStt.put("GRNS", "GRNS");
		tmpStt.put("GROV", "GRV");
		tmpStt.put("GROVE", "GRV");
		tmpStt.put("GROVES", "GRVS");
		tmpStt.put("GRV", "GRV");
		tmpStt.put("GRVS", "GRVS");
		tmpStt.put("HARB", "HBR");
		tmpStt.put("HARBOR", "HBR");
		tmpStt.put("HARBORS", "HBRS");
		tmpStt.put("HARBOUR", "HBR");
		tmpStt.put("HARBR", "HBR");
		tmpStt.put("HBR", "HBR");
		tmpStt.put("HBRS", "HBRS");
		tmpStt.put("HAVEN", "HVN");
		tmpStt.put("HAVN", "HVN");
		tmpStt.put("HEIGHT", "HTS");
		tmpStt.put("HEIGHTS", "HGTS");
		tmpStt.put("HGTS", "HGTS");
		tmpStt.put("HGHWY", "HWY");
		tmpStt.put("HIGHWA", "HWY");
		tmpStt.put("HIGHWAY", "HWY");
		tmpStt.put("HIGHWY", "HWY");
		tmpStt.put("HILL", "HL");
		tmpStt.put("HILLS", "HLS");
		tmpStt.put("HIWAY", "HWY");
		tmpStt.put("HIWY", "HWY");
		tmpStt.put("HL", "HL");
		tmpStt.put("HLLW", "HOLW");
		tmpStt.put("HLS", "HOLW");
		tmpStt.put("HOLLOW", "HOLW");
		tmpStt.put("HOLLOWS", "HOLW");
		tmpStt.put("HOLW", "HOLW");
		tmpStt.put("HOLWS", "HOLW");
		tmpStt.put("HRBOR", "HBR");
		tmpStt.put("HRBR", "HBR");
		tmpStt.put("HT", "HTS");
		tmpStt.put("HTS", "HTS");
		tmpStt.put("HVN", "HVN");
		tmpStt.put("HWAY", "HWY");
		tmpStt.put("HWY", "HWY");
		tmpStt.put("INLET", "INLT");
		tmpStt.put("INLT", "INLT");
		tmpStt.put("IS", "I");
		tmpStt.put("ISL", "I");
		tmpStt.put("ISLAND", "I");
		tmpStt.put("ISLANDS", "ISS");
		tmpStt.put("ISLE", "I");
		tmpStt.put("ISLES", "ISS");
		tmpStt.put("ISLND", "I");
		tmpStt.put("ISLNDS", "ISS");
		tmpStt.put("ISS", "ISS");
		tmpStt.put("JCT", "JCT");
		tmpStt.put("JCTION", "JCT");
		tmpStt.put("JCTN", "JCT");
		tmpStt.put("JCTNS", "JCTS");
		tmpStt.put("JCTS", "JCTS");
		tmpStt.put("JUNCTION", "JCT");
		tmpStt.put("JUNCTIONS", "JCTS");
		tmpStt.put("JUNCTN", "JCT");
		tmpStt.put("JUNCTON", "JCT");
		tmpStt.put("KEY", "KY");
		tmpStt.put("KEYS", "KYS");
		tmpStt.put("KNL", "KNL");
		tmpStt.put("KNLS", "KNLS");
		tmpStt.put("KNOL", "KNL");
		tmpStt.put("KNOLL", "KNL");
		tmpStt.put("KNOLLS", "KNLS");
		tmpStt.put("KY", "KY");
		tmpStt.put("KYS", "KYS");
		// tmpStt.put("LAKE", "LK"); 321 W LAKE, ELMHURST, 60126
		// tmpStt.put("LAKES", "LKS"); 1567 Twin Lakes|Rogers|72756 ; 45
		// Lakes|Bethlehem Village|06751
		tmpStt.put("LANDING", "LNDG");
		tmpStt.put("LANE", "LA");
		tmpStt.put("LANES", "LA");
		tmpStt.put("LCK", "LCK");
		tmpStt.put("LCKS", "LCKS");
		tmpStt.put("LDG", "LDG");
		tmpStt.put("LDGE", "LDG");
		tmpStt.put("LF", "LF");
		tmpStt.put("LGT", "LGT");
		tmpStt.put("LGTS", "LGTS");
		tmpStt.put("LIGHT", "LGT");
		tmpStt.put("LIGHTS", "LGTS");
		tmpStt.put("LK", "LK");
		tmpStt.put("LKS", "LKS");
		tmpStt.put("LN", "LA");
		tmpStt.put("LNDG", "LNDG");
		tmpStt.put("LNDNG", "LNDG");
		tmpStt.put("LOAF", "LF");
		tmpStt.put("LOCK", "LK");
		tmpStt.put("LOCKS", "LKS");
		tmpStt.put("LODG", "LDG");
		tmpStt.put("LODGE", "LDG");
		tmpStt.put("LOOP", "LOOP");
		tmpStt.put("LOOPS", "LOOP");
		tmpStt.put("LP", "LOOP");
		tmpStt.put("MALL", "MALL");
		tmpStt.put("MANOR", "MNR");
		tmpStt.put("MANORS", "MNRS");
		tmpStt.put("MDW", "MDW");
		tmpStt.put("MDWS", "MDWS");
		tmpStt.put("MEADOW", "MDW");
		tmpStt.put("MEADOWS", "MDWS");
		tmpStt.put("MEDOWS", "MDWS");
		tmpStt.put("MEWS", "MDWS");
		tmpStt.put("MILL", "MILL");
		tmpStt.put("MILLS", "ML");
		tmpStt.put("MISSION", "MSN");
		tmpStt.put("MISSN", "MSN");
		tmpStt.put("ML", "ML");
		tmpStt.put("MLS", "MLS");
		tmpStt.put("MNR", "MNR");
		tmpStt.put("MNRS", "MNRS");
		tmpStt.put("MNT", "MTN");
		tmpStt.put("MNTAIN", "MTN");
		tmpStt.put("MNTN", "MTN");
		tmpStt.put("MNTNS", "MTNS");
		tmpStt.put("MOTORWAY", "MTWY");
		tmpStt.put("MOUNT", "MT");
		tmpStt.put("MOUNTAIN", "MTN");
		tmpStt.put("MOUNTAINS", "MTNS");
		tmpStt.put("MOUNTIN", "MTN");
		tmpStt.put("MSN", "MSN");
		tmpStt.put("MSSN", "MSN");
		tmpStt.put("MT", "MTN");
		tmpStt.put("MTIN", "MTN");
		tmpStt.put("MTN", "MTN");
		tmpStt.put("MTNS", "MTNS");
		tmpStt.put("MTWY", "MTWY");
		tmpStt.put("NCK", "NCK");
		tmpStt.put("NECK", "NCK");
		// tmpStt.put("ORCH", "ORCH"); see 'Old Orchard', Niles, IL
		// tmpStt.put("ORCHARD", "ORCH"); see 'Old Orchard', Niles, IL
		// tmpStt.put("ORCHRD", "ORCH"); see 'Old Orchard', Niles, IL
		tmpStt.put("OVAL", "OVAL");
		tmpStt.put("OVL", "OVAL");
		// tmpStt.put("PARK", "PARK"); 4901 W. Irving Park,Chicago,60641
		tmpStt.put("PARKS", "PARK");
		tmpStt.put("PARKWAY", "PKWY");
		tmpStt.put("PARKWAYS", "PKWY");
		tmpStt.put("PARKWY", "PKWY");
		tmpStt.put("PASS", "PASS");
		tmpStt.put("PASSAGE", "PSGE");
		tmpStt.put("PATH", "PATH");
		tmpStt.put("PATHS", "PATH");
		tmpStt.put("PIKE", "PKE");
		tmpStt.put("PIKES", "PKE");
		tmpStt.put("PINE", "PNE");
		tmpStt.put("PINES", "PNES");
		tmpStt.put("PK", "PKE");
		tmpStt.put("PKE", "PKE");
		tmpStt.put("PKWAY", "PKWY");
		tmpStt.put("PKWAYS", "PKWY");
		tmpStt.put("PKWY", "PKWY");
		tmpStt.put("PKWYS", "PKWY");
		tmpStt.put("PKY", "PKWY");
		tmpStt.put("PL", "PL");
		tmpStt.put("PLACE", "PL");
		tmpStt.put("PLAIN", "PLN");
		tmpStt.put("PLAINS", "PLNS");
		tmpStt.put("PLAZ", "PLZ");
		tmpStt.put("PLAZA", "PLZ");
		tmpStt.put("PLN", "PLN");
		tmpStt.put("PLNS", "PLNS");
		tmpStt.put("PLZ", "PLZ");
		tmpStt.put("PLZA", "PLZ");
		tmpStt.put("PNE", "PNE");
		tmpStt.put("PNES", "PNES");
		tmpStt.put("POINT", "PT");
		tmpStt.put("POINTE", "PT");
		tmpStt.put("POINTS", "PTS");
		tmpStt.put("PORT", "PRT");
		tmpStt.put("PORTS", "PRTS");
		tmpStt.put("PR", "PR");
		tmpStt.put("PRAIRIE", "PR");
		tmpStt.put("PRK", "PARK");
		tmpStt.put("PRKS", "PARK");
		tmpStt.put("PRR", "PR");
		tmpStt.put("PRT", "PRT");
		tmpStt.put("PRTS", "PRTS");
		tmpStt.put("PSG", "PSGE");
		tmpStt.put("PSGE", "PSGE");
		tmpStt.put("PT", "PT");
		tmpStt.put("PTS", "PTS");
		tmpStt.put("PWY", "PKWY");
		tmpStt.put("RAD", "RADL");
		tmpStt.put("RADIAL", "RADL");
		tmpStt.put("RADIEL", "RADL");
		tmpStt.put("RADL", "RADL");
		tmpStt.put("RANCH", "RNCH");
		tmpStt.put("RANCHES", "RNCH");
		tmpStt.put("RAPID", "RPD");
		tmpStt.put("RAPIDS", "RPDS");
		tmpStt.put("RD", "RD");
		tmpStt.put("RDG", "RDG");
		tmpStt.put("RDGE", "RDG");
		tmpStt.put("RDGS", "RDGS");
		tmpStt.put("RDS", "RDS");
		tmpStt.put("REST", "RST");
		tmpStt.put("RIDGE", "RDG");
		tmpStt.put("RIDGES", "RDGS");
		tmpStt.put("RIV", "RIV");
		tmpStt.put("RIVER", "RIV");
		tmpStt.put("RIVR", "RIV");
		tmpStt.put("RNCH", "RNCH");
		tmpStt.put("RNCHS", "RNCH");
		tmpStt.put("RO", "RD");
		tmpStt.put("ROAD", "RD");
		tmpStt.put("ROADS", "RDS");
		// tmpStt.put("ROUTE", "RTE"); this brings more harm than good
		tmpStt.put("ROW", "ROW");
		tmpStt.put("RPD", "RPD");
		tmpStt.put("RPDS", "RPDS");
		tmpStt.put("RST", "RST");
		// tmpStt.put("RT", "RTE"); this brings more harm than good
		// tmpStt.put("RTE", "RTE"); this brings more harm than good
		tmpStt.put("RUE", "RUE");
		tmpStt.put("RUN", "RUN");
		tmpStt.put("RVR", "RIV");
		tmpStt.put("SHL", "SHL");
		tmpStt.put("SHLS", "SHLS");
		tmpStt.put("SHOAL", "SHL");
		tmpStt.put("SHOALS", "SHLS");
		tmpStt.put("SHOAR", "SHR");
		tmpStt.put("SHOARS", "SHRS");
		tmpStt.put("SHORE", "SHR");
		tmpStt.put("SHORES", "SHRS");
		tmpStt.put("SHR", "SHR");
		tmpStt.put("SHRS", "SHRS");
		tmpStt.put("SKWY", "SKWY");
		tmpStt.put("SKYWAY", "SKWY");
		tmpStt.put("SMT", "SMT");
		tmpStt.put("SPG", "SPG");
		tmpStt.put("SPGS", "SPGS");
		tmpStt.put("SPNG", "SPG");
		tmpStt.put("SPNGS", "SPGS");
		tmpStt.put("SPRING", "SPG");
		tmpStt.put("SPRINGS", "SPGS");
		tmpStt.put("SPRNG", "SPG");
		tmpStt.put("SPRNGS", "SPGS");
		tmpStt.put("SPUR", "SPUR");
		tmpStt.put("SPURS", "SPUR");
		tmpStt.put("SQ", "SQ");
		tmpStt.put("SQR", "SQ");
		tmpStt.put("SQRE", "SQ");
		tmpStt.put("SQRS", "SQS");
		tmpStt.put("SQS", "SQS");
		tmpStt.put("SQU", "SQ");
		tmpStt.put("SQUARE", "SQ");
		tmpStt.put("SQUARES", "SQS");
		tmpStt.put("ST", "ST");
		tmpStt.put("STA", "STA");
		tmpStt.put("STATION", "STA");
		tmpStt.put("STATN", "STA");
		tmpStt.put("STN", "STA");
		tmpStt.put("STR", "ST");
		tmpStt.put("STRA", "STRA");
		tmpStt.put("STRAV", "STRA");
		tmpStt.put("STRAVE", "STRA");
		tmpStt.put("STRAVEN", "STRA");
		tmpStt.put("STRAVENUE", "STRA");
		tmpStt.put("STRAVN", "STRA");
		tmpStt.put("STREAM", "STRM");
		tmpStt.put("STREE", "ST");
		tmpStt.put("STREET", "ST");
		tmpStt.put("STREETS", "STS");
		tmpStt.put("STREME", "STRM");
		tmpStt.put("STRM", "STRM");
		tmpStt.put("STRT", "ST");
		tmpStt.put("STRVN", "STA");
		tmpStt.put("STRVNUE", "STA");
		tmpStt.put("STS", "STS");
		tmpStt.put("SUMIT", "SMT");
		tmpStt.put("SUMITT", "SMT");
		tmpStt.put("SUMMIT", "SMT");
		tmpStt.put("TER", "TER");
		tmpStt.put("TERACE", "TER");
		tmpStt.put("TERR", "TER");
		tmpStt.put("TERRACE", "TER");
		tmpStt.put("TERRRACE", "TER");
		tmpStt.put("THROUGHWAY", "THWY");
		tmpStt.put("THRUWAY", "THWY");
		tmpStt.put("TL", "TRL");
		tmpStt.put("TPK", "TPKE");
		tmpStt.put("TPKE", "TPKE");
		tmpStt.put("TR", "TER");
		tmpStt.put("TRACE", "TRCE");
		tmpStt.put("TRACES", "TRCE");
		tmpStt.put("TRACK", "TRAK");
		tmpStt.put("TRACKS", "TRAK");
		tmpStt.put("TRAFFICWAY", "TRFY");
		tmpStt.put("TRAFFWAY", "TRFY");
		tmpStt.put("TRAIL", "TRL");
		tmpStt.put("TRAILER", "TRLR");
		tmpStt.put("TRAILS", "TRL");
		tmpStt.put("TRAK", "TRAK");
		tmpStt.put("TRC", "TER");
		tmpStt.put("TRCE", "TER");
		tmpStt.put("TRFWAY", "TRFY");
		tmpStt.put("TRFY", "TRFY");
		tmpStt.put("TRK", "TRAK");
		tmpStt.put("TRKS", "TRAK");
		tmpStt.put("TRL", "TRLR");
		tmpStt.put("TRLR", "TRLR");
		tmpStt.put("TRLS", "TRLR");
		tmpStt.put("TRNPK", "TPKE");
		tmpStt.put("TRWY", "THWY");
		tmpStt.put("TUNEL", "TUNL");
		tmpStt.put("TUNL", "TUNL");
		tmpStt.put("TUNLS", "TUNLS");
		tmpStt.put("TUNNEL", "TUNL");
		tmpStt.put("TUNNELS", "TUNLS");
		tmpStt.put("TUNNL", "TUNL");
		tmpStt.put("TURNPIKE", "TPKE");
		tmpStt.put("TURNPK", "TPKE");
		tmpStt.put("UN", "UPAS");
		tmpStt.put("UNDERPASS", "UPAS");
		tmpStt.put("UNION", "UPAS");
		tmpStt.put("UNIONS", "UNS");
		tmpStt.put("UNS", "UNS");
		tmpStt.put("UPAS", "UNPA");
		tmpStt.put("VALLEY", "VLY");
		tmpStt.put("VALLEYS", "VLYS");
		tmpStt.put("VALLY", "VLY");
		tmpStt.put("VDCT", "VIA");
		tmpStt.put("VIA", "VIA");
		tmpStt.put("VIADCT", "VIA");
		tmpStt.put("VIADUCT", "VIA");
		tmpStt.put("VIEW", "VW");
		tmpStt.put("VIEWS", "VWS");
		tmpStt.put("VILL", "VLG");
		tmpStt.put("VILLAG", "VLG");
		tmpStt.put("VILLAGE", "VLG");
		tmpStt.put("VILLAGES", "VLGS");
		tmpStt.put("VILLE", "VLG");
		tmpStt.put("VILLG", "VLG");
		tmpStt.put("VILLIAGE", "VLG");
		tmpStt.put("VIS", "VIS");
		tmpStt.put("VIST", "VIS");
		tmpStt.put("VISTA", "VIS");
		tmpStt.put("VL", "VLG");
		tmpStt.put("VLG", "VLG");
		tmpStt.put("VLGS", "VLGS");
		tmpStt.put("VLLY", "VL");
		tmpStt.put("VLLYS", "VLS");
		tmpStt.put("VLY", "VLY");
		tmpStt.put("VLYS", "VLYS");
		tmpStt.put("VST", "VIS");
		tmpStt.put("VSTA", "VIS");
		tmpStt.put("VW", "VW");
		tmpStt.put("VWS", "VWS");
		tmpStt.put("WALK", "WALK");
		tmpStt.put("WALKS", "WALK");
		tmpStt.put("WAY", "WY");
		tmpStt.put("WAYS", "WAYS");
		tmpStt.put("WELL", "WL");
		tmpStt.put("WELLS", "WLS");
		tmpStt.put("WL", "WL");
		tmpStt.put("WLS", "WLS");
		tmpStt.put("WY", "WAY");
		tmpStt.put("WYS", "WAYS");
		tmpStt.put("XING", "CRSG");
		tmpStt.put("XRD", "XRD");
		tmpStt.put("XRDS", "XRDS");
		STREET_TYPE = Collections.unmodifiableMap(tmpStt);
		Map<String, String> tmpSut = new HashMap<String, String>();
		tmpSut.put("#", "#");
		tmpSut.put("0BX", "0BX");
		tmpSut.put("AP", "APT");
		tmpSut.put("APART", "APT");
		tmpSut.put("APARTMEN", "APT");
		tmpSut.put("APARTMENT", "APT");
		tmpSut.put("APT", "APT");
		tmpSut.put("APTMNT", "APT");
		tmpSut.put("APTMT", "APT");
		tmpSut.put("B0C", "BX");
		tmpSut.put("B0X", "BX");
		tmpSut.put("B0XX", "BX");
		tmpSut.put("BASEMENT", "BSMT");
		tmpSut.put("BLD", "BLDG");
		tmpSut.put("BLDG", "BLDG");
		tmpSut.put("BOC", "BX");
		tmpSut.put("BOX", "BX");
		tmpSut.put("BOXX", "BX");
		tmpSut.put("BSMT", "BSMT");
		tmpSut.put("BUILDING", "BLDG");
		tmpSut.put("BX", "BX");
		tmpSut.put("BXO", "BX");
		tmpSut.put("CELLAR", "CELLAR");
		tmpSut.put("CONDO", "CONDO");
		tmpSut.put("DEP", "DEPT");
		tmpSut.put("DEPARTMENT", "DEPT");
		tmpSut.put("DEPT", "DEPT");
		tmpSut.put("DIST", "DIST");
		tmpSut.put("DISTRICT", "DIST");
		tmpSut.put("DOCK", "DOCK");
		tmpSut.put("FL", "FL");
		tmpSut.put("FLOOR", "FL");
		tmpSut.put("FLR", "FL");
		tmpSut.put("FRNT", "FRNT");
		tmpSut.put("FRONT", "FRNT");
		tmpSut.put("HANGAR", "HNGR");
		tmpSut.put("HNGR", "HNGR");
		tmpSut.put("IN", "IN");
		tmpSut.put("KEY", "KEY");
		tmpSut.put("KY", "KEY");
		tmpSut.put("LBBY", "LBBY");
		tmpSut.put("LBY", "LBBY");
		tmpSut.put("LEVEL", "LVL");
		tmpSut.put("LVL", "LVL");
		tmpSut.put("LOBBY", "LBBY");
		tmpSut.put("LOCK", "LCK");
		tmpSut.put("LOT", "LT");
		tmpSut.put("LOWER", "LOWR");
		tmpSut.put("LOWR", "LOWR");
		tmpSut.put("LT", "LOT");
		tmpSut.put("LWR", "LOWR");
		tmpSut.put("MAILSTOP", "MS");
		tmpSut.put("MS", "MS");
		tmpSut.put("MSC", "MSC");
		tmpSut.put("NBR", "NBR");
		tmpSut.put("NR", "NBR");
		tmpSut.put("NUM", "NBR");
		tmpSut.put("NUMB", "NBR");
		tmpSut.put("NUMBER", "NBR");
		tmpSut.put("OBX", "OBX");
		tmpSut.put("OFC", "OFC");
		tmpSut.put("OFF", "OFC");
		tmpSut.put("OFFICE", "OFC");
		tmpSut.put("PENT", "PH");
		tmpSut.put("PENTHOUSE", "PH");
		tmpSut.put("PFC", "PFC");
		tmpSut.put("PH", "PH");
		tmpSut.put("PIER", "PIER");
		tmpSut.put("REAR", "REAR");
		tmpSut.put("RM", "RM");
		// tmpSut.put("RTE", "RTE"); this brings more harm than good
		// tmpSut.put("ROUTE", "RTE"); this brings more harm than good
		tmpSut.put("ROOM", "RM");
		tmpSut.put("SIDE", "SIDE");
		tmpSut.put("SITE", "SITE");
		tmpSut.put("SLIP", "SLIP");
		tmpSut.put("SPACE", "SPC");
		tmpSut.put("SPC", "SPC");
		tmpSut.put("STE", "STE");
		tmpSut.put("STOP", "STOP");
		tmpSut.put("SUITE", "STE");
		tmpSut.put("SUITES", "STES");
		tmpSut.put("TOWER", "TWR");
		tmpSut.put("TRAILER", "TRLR");
		tmpSut.put("TRLR", "TRLR");
		tmpSut.put("UNIT", "UNIT");
		tmpSut.put("UPPER", "UPPR");
		tmpSut.put("UPPR", "UPPR");
		tmpSut.put("UPR", "UPPR");
		// tmpSut.put("VILLA", "VIL"); 181 N Villa,Elmhurst,60126 == 181 N Villa
		// Ave, Elmhurst, DuPage, IL 60126
		SU_TYPES = Collections.unmodifiableMap(tmpSut);
		Map<String, String> tmpSty = new HashMap<String, String>();
		tmpSty.put("ALLEE", "ALY");
		tmpSty.put("ALLEY", "ALY");
		tmpSty.put("ALLY", "ALY");
		tmpSty.put("ALY", "ALY");
		tmpSty.put("ANEX", "ANX");
		tmpSty.put("ANNEX", "ANX");
		tmpSty.put("ANNX", "ANX");
		tmpSty.put("ANX", "ANX");
		tmpSty.put("ARC", "ARC");
		tmpSty.put("ARCADE", "ARC");
		tmpSty.put("AV", "AVE");
		tmpSty.put("AE", "AVE");
		tmpSty.put("AVE", "AVE");
		tmpSty.put("AVEN", "AVE");
		tmpSty.put("AVENU", "AVE");
		tmpSty.put("AVENUE", "AVE");
		tmpSty.put("AVN", "AVE");
		tmpSty.put("AVNUE", "AVE");
		tmpSty.put("BAYOO", "BYU");
		tmpSty.put("BAYOU", "BYU");
		tmpSty.put("BCH", "BCH");
		tmpSty.put("BEACH", "BCH");
		tmpSty.put("BEND", "BND");
		tmpSty.put("BND", "BND");
		tmpSty.put("BG", "BRG");
		tmpSty.put("BGS", "BRG");
		tmpSty.put("BL", "BLF");
		tmpSty.put("BLF", "BLF");
		tmpSty.put("BLFS", "BLF");
		tmpSty.put("BLUF", "BLF");
		tmpSty.put("BLUFF", "BLF");
		tmpSty.put("BLUFFS", "BLF");
		tmpSty.put("BLV", "BLVD");
		tmpSty.put("BLVD", "BLVD");
		tmpSty.put("BLVRD", "BLVD");
		tmpSty.put("BO", "BTM");
		tmpSty.put("BOT", "BTM");
		tmpSty.put("BOTTM", "BTM");
		tmpSty.put("BOTTOM", "BTM");
		tmpSty.put("BOUL", "BLVD");
		tmpSty.put("BOULEVARD", "BLVD");
		tmpSty.put("BOULIVARD", "BLVD");
		tmpSty.put("BOULV", "BLVD");
		tmpSty.put("BOULVRD", "BLVD");
		tmpSty.put("BR", "BR");
		tmpSty.put("BRANCH", "BR");
		tmpSty.put("BRDGE", "BRG");
		tmpSty.put("BRG", "BRG");
		tmpSty.put("BRIDG", "BRG");
		tmpSty.put("BRIDGE", "BRG");
		tmpSty.put("BRK", "BRK");
		tmpSty.put("BRKS", "BRKS");
		tmpSty.put("BRNCH", "BR");
		tmpSty.put("BROOK", "BRK");
		tmpSty.put("BROOKS", "BRKS");
		tmpSty.put("BTM", "BTM");
		tmpSty.put("BURG", "BG");
		tmpSty.put("BURGS", "BG");
		tmpSty.put("BV", "BV");
		tmpSty.put("BYP", "BYP");
		tmpSty.put("BYPA", "BYP");
		tmpSty.put("BYPAS", "BYP");
		tmpSty.put("BYPASS", "BYP");
		tmpSty.put("BYPS", "BYP");
		tmpSty.put("BYU", "BYU");
		tmpSty.put("CAMP", "CP");
		tmpSty.put("CMP", "CP");
		tmpSty.put("CNYN", "CYN");
		tmpSty.put("CANYN", "CYN");
		tmpSty.put("CANYON", "CYN");
		tmpSty.put("CAPE", "CPE");
		tmpSty.put("CAUSEWAY", "CSWY");
		tmpSty.put("CAUSWAY", "CSWY");
		tmpSty.put("CNTER", "CTR");
		tmpSty.put("CNTR", "CTR");
		tmpSty.put("CEN", "CTR");
		tmpSty.put("CENT", "CTR");
		tmpSty.put("CENTER", "CTR");
		tmpSty.put("CENTERS", "CTR");
		tmpSty.put("CENTR", "CTR");
		tmpSty.put("CENTRE", "CTR");
		tmpSty.put("CFS", "CLF");
		tmpSty.put("CIR", "CIR");
		tmpSty.put("CIRC", "CIR");
		tmpSty.put("CIRCL", "CIR");
		tmpSty.put("CIRCLE", "CIR");
		tmpSty.put("CIRCLES", "CIRS");
		tmpSty.put("CIRS", "CIRS");
		tmpSty.put("CLB", "CLB");
		tmpSty.put("CLF", "CLF");
		tmpSty.put("CLFS", "CLFS");
		tmpSty.put("CLIFF", "CLF");
		tmpSty.put("CLIFFS", "CLFS");
		tmpSty.put("CLUB", "CLB");
		tmpSty.put("CMN", "CMN");
		tmpSty.put("CMNS", "CMNS");
		tmpSty.put("CMP", "CP");
		tmpSty.put("COMMON", "CMN");
		tmpSty.put("COMMONS", "CMNS");
		tmpSty.put("COR", "COR");
		tmpSty.put("CORNER", "COR");
		tmpSty.put("CORNERS", "COR");
		tmpSty.put("CORS", "CRSE");
		tmpSty.put("COURSE", "CRSE");
		tmpSty.put("COURT", "CT");
		tmpSty.put("CRT", "CT");
		tmpSty.put("COURTS", "CTS");
		tmpSty.put("COVE", "CV");
		tmpSty.put("COVES", "CVS");
		tmpSty.put("CP", "CPE");
		tmpSty.put("CPE", "CPE");
		tmpSty.put("CR", "CIR");
		tmpSty.put("CRCL", "CIR");
		tmpSty.put("CRCLE", "CIR");
		tmpSty.put("CRECENT", "CRES");
		tmpSty.put("CREEK", "CRK");
		tmpSty.put("CRES", "CRES");
		tmpSty.put("CRESCENT", "CRES");
		tmpSty.put("CRESENT", "CRES");
		tmpSty.put("CREST", "CRES");
		tmpSty.put("CRSCNT", "CRES");
		tmpSty.put("CRSE", "CRES");
		tmpSty.put("CRSENT", "CRES");
		tmpSty.put("CRSNT", "CRES");
		tmpSty.put("CRK", "CRK");
		tmpSty.put("CRL", "CIR");
		tmpSty.put("CROSSING", "XING");
		tmpSty.put("CROSSROAD", "XRD");
		tmpSty.put("CROSSROADS", "XRDS");
		tmpSty.put("CRSSNG", "XING");
		tmpSty.put("CSWY", "CSWY");
		tmpSty.put("CT", "CT");
		tmpSty.put("CTR", "CTR");
		tmpSty.put("CTRS", "CTRS");
		tmpSty.put("CTS", "CTRS");
		tmpSty.put("CURV", "CURV");
		tmpSty.put("CURVE", "CURV");
		tmpSty.put("CUT-OFF", "CO");
		tmpSty.put("CUTOFF", "CO");
		tmpSty.put("CV", "CURV");
		tmpSty.put("CVS", "CURV");
		tmpSty.put("CYN", "CYN");
		tmpSty.put("DALE", "DL");
		tmpSty.put("DAM", "DM");
		tmpSty.put("DIV", "DV");
		tmpSty.put("DIVIDE", "DV");
		tmpSty.put("DL", "DL");
		tmpSty.put("DM", "DM");
		tmpSty.put("DR", "DR");
		tmpSty.put("DRIV", "DR");
		tmpSty.put("DRIVE", "DR");
		tmpSty.put("DRIVES", "DRS");
		tmpSty.put("DRS", "DRS");
		tmpSty.put("DRV", "DR");
		tmpSty.put("DV", "DR");
		tmpSty.put("DVD", "DVD");
		tmpSty.put("EST", "EST");
		tmpSty.put("ESTATE", "EST");
		tmpSty.put("ESTATES", "ESTS");
		tmpSty.put("ESTS", "ESTS");
		tmpSty.put("EX", "EXPY");
		tmpSty.put("EXP", "EXPY");
		tmpSty.put("EXPR", "EXPY");
		tmpSty.put("EXPRESS", "EXPY");
		tmpSty.put("EXPRESSWAY", "EXPY");
		tmpSty.put("EXPW", "EXPY");
		tmpSty.put("EXPY", "EXPY");
		tmpSty.put("EXT", "EXT");
		tmpSty.put("EXTENSION", "EXT");
		tmpSty.put("EXTENSIONS", "EXTS");
		tmpSty.put("EXTN", "EXT");
		tmpSty.put("EXTNSN", "EXT");
		tmpSty.put("EXTS", "EXTS");
		tmpSty.put("FALL", "FL");
		tmpSty.put("FALLS", "FLS");
		tmpSty.put("FERRY", "FRY");
		tmpSty.put("FRRY", "FRY");
		tmpSty.put("FIELD", "FLD");
		tmpSty.put("FIELDS", "FLDS");
		tmpSty.put("FLAT", "FLT");
		tmpSty.put("FLATS", "FLTS");
		tmpSty.put("FLD", "FLD");
		tmpSty.put("FLDS", "FLDS");
		tmpSty.put("FLS", "FLDS");
		tmpSty.put("FLT", "FLT");
		tmpSty.put("FLTS", "FLTS");
		tmpSty.put("FORD", "FRD");
		tmpSty.put("FORDS", "FRDS");
		tmpSty.put("FRD", "FRD");
		tmpSty.put("FRDS", "FRDS");
		tmpSty.put("FOREST", "FRST");
		tmpSty.put("FORESTS", "FRST");
		tmpSty.put("FRST", "FRST");
		tmpSty.put("FORG", "FRG");
		tmpSty.put("FORGE", "FRG");
		tmpSty.put("FORGES", "FRGS");
		tmpSty.put("FRG", "FRG");
		tmpSty.put("FRGS", "FRGS");
		tmpSty.put("FORK", "FRK");
		tmpSty.put("FORKS", "FRKS");
		tmpSty.put("FRK", "FRK");
		tmpSty.put("FRKS", "FRKS");
		tmpSty.put("FORT", "FT");
		tmpSty.put("FRT", "FT");
		tmpSty.put("FT", "FT");
		tmpSty.put("FREEWAY", "FWY");
		tmpSty.put("FREEWY", "FWY");
		tmpSty.put("FRWAY", "FWY");
		tmpSty.put("FRWY", "FWY");
		tmpSty.put("FRY", "FWY");
		tmpSty.put("FWY", "FWY");
		tmpSty.put("GARDEN", "GDN");
		tmpSty.put("GARDENS", "GDNS");
		tmpSty.put("GARDN", "GDN");
		tmpSty.put("GDN", "GDN");
		tmpSty.put("GDNS", "GDNS");
		tmpSty.put("GR", "GDN");
		tmpSty.put("GRDEN", "GDN");
		tmpSty.put("GRDN", "GDN");
		tmpSty.put("GRDNS", "GDNS");
		tmpSty.put("GATEWAY", "GTWY");
		tmpSty.put("GATEWY", "GTWY");
		tmpSty.put("GATWAY", "GTWY");
		tmpSty.put("GTWAY", "GTWY");
		tmpSty.put("GTWY", "GTWY");
		tmpSty.put("GLEN", "GLN");
		tmpSty.put("GLENS", "GLNS");
		tmpSty.put("GLN", "GLN");
		tmpSty.put("GLNS", "GLNS");
		tmpSty.put("GREEN", "GRN");
		tmpSty.put("GREENE", "GRN");
		tmpSty.put("GREENS", "GRNS");
		tmpSty.put("GRN", "GRN");
		tmpSty.put("GRNS", "GRNS");
		tmpSty.put("GROV", "GRV");
		tmpSty.put("GROVE", "GRV");
		tmpSty.put("GROVES", "GRVS");
		tmpSty.put("GRV", "GRV");
		tmpSty.put("GRVS", "GRVS");
		tmpSty.put("HARB", "HBR");
		tmpSty.put("HARBOR", "HBR");
		tmpSty.put("HARBORS", "HBRS");
		tmpSty.put("HARBOUR", "HBR");
		tmpSty.put("HARBR", "HBR");
		tmpSty.put("HBR", "HBR");
		tmpSty.put("HBRS", "HBRS");
		tmpSty.put("HAVEN", "HVN");
		tmpSty.put("HAVN", "HVN");
		tmpSty.put("HEIGHT", "HTS");
		tmpSty.put("HEIGHTS", "HGTS");
		tmpSty.put("HGTS", "HGTS");
		tmpSty.put("HGHWY", "HWY");
		tmpSty.put("HIGHWA", "HWY");
		tmpSty.put("HIGHWAY", "HWY");
		tmpSty.put("HIGHWY", "HWY");
		tmpSty.put("HILL", "HL");
		tmpSty.put("HILLS", "HLS");
		tmpSty.put("HIWAY", "HWY");
		tmpSty.put("HIWY", "HWY");
		tmpSty.put("HL", "HL");
		tmpSty.put("HLLW", "HOLW");
		tmpSty.put("HLS", "HOLW");
		tmpSty.put("HOLLOW", "HOLW");
		tmpSty.put("HOLLOWS", "HOLW");
		tmpSty.put("HOLW", "HOLW");
		tmpSty.put("HOLWS", "HOLW");
		tmpSty.put("HRBOR", "HBR");
		tmpSty.put("HRBR", "HBR");
		tmpSty.put("HT", "HTS");
		tmpSty.put("HTS", "HTS");
		tmpSty.put("HVN", "HVN");
		tmpSty.put("HWAY", "HWY");
		tmpSty.put("HWY", "HWY");
		tmpSty.put("INLET", "INLT");
		tmpSty.put("INLT", "INLT");
		tmpSty.put("IS", "IS");
		tmpSty.put("ISL", "IS");
		tmpSty.put("ISLAND", "IS");
		tmpSty.put("ISLANDS", "ISS");
		tmpSty.put("ISLE", "IS");
		tmpSty.put("ISLES", "ISS");
		tmpSty.put("ISLND", "IS");
		tmpSty.put("ISLNDS", "ISS");
		tmpSty.put("ISS", "ISS");
		tmpSty.put("JCT", "JCT");
		tmpSty.put("JCTION", "JCT");
		tmpSty.put("JCTN", "JCT");
		tmpSty.put("JCTNS", "JCTS");
		tmpSty.put("JCTS", "JCTS");
		tmpSty.put("JUNCTION", "JCT");
		tmpSty.put("JUNCTIONS", "JCTS");
		tmpSty.put("JUNCTN", "JCT");
		tmpSty.put("JUNCTON", "JCT");
		tmpSty.put("KEY", "KY");
		tmpSty.put("KEYS", "KYS");
		tmpSty.put("KNL", "KNL");
		tmpSty.put("KNLS", "KNLS");
		tmpSty.put("KNOL", "KNL");
		tmpSty.put("KNOLL", "KNL");
		tmpSty.put("KNOLLS", "KNLS");
		tmpSty.put("KY", "KY");
		tmpSty.put("KYS", "KYS");
		tmpSty.put("LAKE", "LK");
		tmpSty.put("LAKES", "LKS");
		tmpSty.put("LANDING", "LNDG");
		tmpSty.put("LANE", "LN");
		tmpSty.put("LANES", "LN");
		tmpSty.put("LCK", "LCK");
		tmpSty.put("LCKS", "LCKS");
		tmpSty.put("LDG", "LDG");
		tmpSty.put("LDGE", "LDG");
		tmpSty.put("LF", "LF");
		tmpSty.put("LGT", "LGT");
		tmpSty.put("LGTS", "LGTS");
		tmpSty.put("LIGHT", "LGT");
		tmpSty.put("LIGHTS", "LGTS");
		tmpSty.put("LK", "LK");
		tmpSty.put("LKS", "LKS");
		tmpSty.put("LN", "LN");
		tmpSty.put("LNDG", "LNDG");
		tmpSty.put("LNDNG", "LNDG");
		tmpSty.put("LOAF", "LF");
		tmpSty.put("LOCK", "LK");
		tmpSty.put("LOCKS", "LKS");
		tmpSty.put("LODG", "LDG");
		tmpSty.put("LODGE", "LDG");
		tmpSty.put("LOOP", "LOOP");
		tmpSty.put("LOOPS", "LOOP");
		tmpSty.put("LP", "LOOP");
		tmpSty.put("MALL", "MALL");
		tmpSty.put("MANOR", "MNR");
		tmpSty.put("MANORS", "MNRS");
		tmpSty.put("MDW", "MDW");
		tmpSty.put("MDWS", "MDWS");
		tmpSty.put("MEADOW", "MDW");
		tmpSty.put("MEADOWS", "MDWS");
		tmpSty.put("MEDOWS", "MDWS");
		tmpSty.put("MEWS", "MDWS");
		tmpSty.put("MILL", "MILL");
		tmpSty.put("MILLS", "ML");
		tmpSty.put("MISSION", "MSN");
		tmpSty.put("MISSN", "MSN");
		tmpSty.put("ML", "ML");
		tmpSty.put("MLS", "MLS");
		tmpSty.put("MNR", "MNR");
		tmpSty.put("MNRS", "MNRS");
		tmpSty.put("MNT", "MTN");
		tmpSty.put("MNTAIN", "MTN");
		tmpSty.put("MNTN", "MTN");
		tmpSty.put("MNTNS", "MTNS");
		tmpSty.put("MOTORWAY", "MTWY");
		tmpSty.put("MOUNT", "MT");
		tmpSty.put("MOUNTAIN", "MTN");
		tmpSty.put("MOUNTAINS", "MTNS");
		tmpSty.put("MOUNTIN", "MTN");
		tmpSty.put("MSN", "MSN");
		tmpSty.put("MSSN", "MSN");
		tmpSty.put("MT", "MTN");
		tmpSty.put("MTIN", "MTN");
		tmpSty.put("MTN", "MTN");
		tmpSty.put("MTNS", "MTNS");
		tmpSty.put("MTWY", "MTWY");
		tmpSty.put("NCK", "NCK");
		tmpSty.put("NECK", "NCK");
		tmpSty.put("ORCH", "ORCH");
		tmpSty.put("ORCHARD", "ORCH");
		tmpSty.put("ORCHRD", "ORCH");
		tmpSty.put("OVAL", "OVAL");
		tmpSty.put("OVL", "OVAL");
		tmpSty.put("PARK", "PARK");
		tmpSty.put("PARKS", "PARK");
		tmpSty.put("PARKWAY", "PKWY");
		tmpSty.put("PARKWAYS", "PKWY");
		tmpSty.put("PARKWY", "PKWY");
		tmpSty.put("PASS", "PASS");
		tmpSty.put("PASSAGE", "PSGE");
		tmpSty.put("PATH", "PATH");
		tmpSty.put("PATHS", "PATH");
		tmpSty.put("PIKE", "PIKE");
		tmpSty.put("PIKES", "PIKE");
		tmpSty.put("PINE", "PNE");
		tmpSty.put("PINES", "PNES");
		tmpSty.put("PK", "PIKE");
		tmpSty.put("PKE", "PIKE");
		tmpSty.put("PKWAY", "PKWY");
		tmpSty.put("PKWAYS", "PKWY");
		tmpSty.put("PKWY", "PKWY");
		tmpSty.put("PKWYS", "PKWY");
		tmpSty.put("PKY", "PKWY");
		tmpSty.put("PL", "PL");
		tmpSty.put("PLACE", "PL");
		tmpSty.put("PLAIN", "PLN");
		tmpSty.put("PLAINS", "PLNS");
		tmpSty.put("PLAZ", "PLZ");
		tmpSty.put("PLAZA", "PLZ");
		tmpSty.put("PLN", "PLN");
		tmpSty.put("PLNS", "PLNS");
		tmpSty.put("PLZ", "PLZ");
		tmpSty.put("PLZA", "PLZ");
		tmpSty.put("PNE", "PNE");
		tmpSty.put("PNES", "PNES");
		tmpSty.put("POINT", "PT");
		tmpSty.put("POINTE", "PT");
		tmpSty.put("POINTS", "PTS");
		tmpSty.put("PORT", "PRT");
		tmpSty.put("PORTS", "PRTS");
		tmpSty.put("PR", "PR");
		tmpSty.put("PRAIRIE", "PR");
		tmpSty.put("PRK", "PARK");
		tmpSty.put("PRKS", "PARK");
		tmpSty.put("PRR", "PR");
		tmpSty.put("PRT", "PRT");
		tmpSty.put("PRTS", "PRTS");
		tmpSty.put("PSG", "PSGE");
		tmpSty.put("PSGE", "PSGE");
		tmpSty.put("PT", "PT");
		tmpSty.put("PTS", "PTS");
		tmpSty.put("PWY", "PKWY");
		tmpSty.put("RAD", "RADL");
		tmpSty.put("RADIAL", "RADL");
		tmpSty.put("RADIEL", "RADL");
		tmpSty.put("RADL", "RADL");
		tmpSty.put("RANCH", "RNCH");
		tmpSty.put("RANCHES", "RNCH");
		tmpSty.put("RAPID", "RPD");
		tmpSty.put("RAPIDS", "RPDS");
		tmpSty.put("RD", "RD");
		tmpSty.put("RDG", "RDG");
		tmpSty.put("RDGE", "RDG");
		tmpSty.put("RDGS", "RDGS");
		tmpSty.put("RDS", "RDS");
		tmpSty.put("REST", "RST");
		tmpSty.put("RIDGE", "RDG");
		tmpSty.put("RIDGES", "RDGS");
		tmpSty.put("RIV", "RIV");
		tmpSty.put("RIVER", "RIV");
		tmpSty.put("RIVR", "RIV");
		tmpSty.put("RNCH", "RNCH");
		tmpSty.put("RNCHS", "RNCH");
		tmpSty.put("RO", "RD");
		tmpSty.put("ROAD", "RD");
		tmpSty.put("ROADS", "RDS");
		tmpSty.put("ROUTE", "RTE");
		tmpSty.put("ROW", "ROW");
		tmpSty.put("RPD", "RPD");
		tmpSty.put("RPDS", "RPDS");
		tmpSty.put("RST", "RST");
		tmpSty.put("RT", "RTE");
		tmpSty.put("RTE", "RTE");
		tmpSty.put("RUE", "RUE");
		tmpSty.put("RUN", "RUN");
		tmpSty.put("RVR", "RIV");
		tmpSty.put("SHL", "SHL");
		tmpSty.put("SHLS", "SHLS");
		tmpSty.put("SHOAL", "SHL");
		tmpSty.put("SHOALS", "SHLS");
		tmpSty.put("SHOAR", "SHR");
		tmpSty.put("SHOARS", "SHRS");
		tmpSty.put("SHORE", "SHR");
		tmpSty.put("SHORES", "SHRS");
		tmpSty.put("SHR", "SHR");
		tmpSty.put("SHRS", "SHRS");
		tmpSty.put("SKWY", "SKWY");
		tmpSty.put("SKYWAY", "SKWY");
		tmpSty.put("SMT", "SMT");
		tmpSty.put("SPG", "SPG");
		tmpSty.put("SPGS", "SPGS");
		tmpSty.put("SPNG", "SPG");
		tmpSty.put("SPNGS", "SPGS");
		tmpSty.put("SPRING", "SPG");
		tmpSty.put("SPRINGS", "SPGS");
		tmpSty.put("SPRNG", "SPG");
		tmpSty.put("SPRNGS", "SPGS");
		tmpSty.put("SPUR", "SPUR");
		tmpSty.put("SPURS", "SPUR");
		tmpSty.put("SQ", "SQ");
		tmpSty.put("SQR", "SQ");
		tmpSty.put("SQRE", "SQ");
		tmpSty.put("SQRS", "SQS");
		tmpSty.put("SQS", "SQS");
		tmpSty.put("SQU", "SQ");
		tmpSty.put("SQUARE", "SQ");
		tmpSty.put("SQUARES", "SQS");
		tmpSty.put("ST", "ST");
		tmpSty.put("STA", "STA");
		tmpSty.put("STATION", "STA");
		tmpSty.put("STATN", "STA");
		tmpSty.put("STN", "STA");
		tmpSty.put("STR", "ST");
		tmpSty.put("STRA", "STRA");
		tmpSty.put("STRAV", "STRA");
		tmpSty.put("STRAVE", "STRA");
		tmpSty.put("STRAVEN", "STRA");
		tmpSty.put("STRAVENUE", "STRA");
		tmpSty.put("STRAVN", "STRA");
		tmpSty.put("STREAM", "STRM");
		tmpSty.put("STREE", "ST");
		tmpSty.put("STREET", "ST");
		tmpSty.put("STREETS", "STS");
		tmpSty.put("STREME", "STRM");
		tmpSty.put("STRM", "STRM");
		tmpSty.put("STRT", "ST");
		tmpSty.put("STRVN", "STA");
		tmpSty.put("STRVNUE", "STA");
		tmpSty.put("STS", "STS");
		tmpSty.put("SUMIT", "SMT");
		tmpSty.put("SUMITT", "SMT");
		tmpSty.put("SUMMIT", "SMT");
		tmpSty.put("TER", "TER");
		tmpSty.put("TERACE", "TER");
		tmpSty.put("TERR", "TER");
		tmpSty.put("TERRACE", "TER");
		tmpSty.put("TERRRACE", "TER");
		tmpSty.put("THROUGHWAY", "TRWY");
		tmpSty.put("THRUWAY", "TRWY");
		tmpSty.put("TL", "TRL");
		tmpSty.put("TPK", "TPKE");
		tmpSty.put("TPKE", "TPKE");
		tmpSty.put("TR", "TER");
		tmpSty.put("TRACE", "TRCE");
		tmpSty.put("TRACES", "TRCE");
		tmpSty.put("TRACK", "TRAK");
		tmpSty.put("TRACKS", "TRAK");
		tmpSty.put("TRAFFICWAY", "TRFY");
		tmpSty.put("TRAFFWAY", "TRFY");
		tmpSty.put("TRAIL", "TRL");
		tmpSty.put("TRAILER", "TRLR");
		tmpSty.put("TRAILS", "TRL");
		tmpSty.put("TRAK", "TRAK");
		tmpSty.put("TRC", "TER");
		tmpSty.put("TRCE", "TER");
		tmpSty.put("TRFWAY", "TRFY");
		tmpSty.put("TRFY", "TRFY");
		tmpSty.put("TRK", "TRAK");
		tmpSty.put("TRKS", "TRAK");
		tmpSty.put("TRL", "TRLR");
		tmpSty.put("TRLR", "TRLR");
		tmpSty.put("TRLS", "TRLR");
		tmpSty.put("TRNPK", "TPKE");
		tmpSty.put("TRWY", "TRFY");
		tmpSty.put("TUNEL", "TUNL");
		tmpSty.put("TUNL", "TUNL");
		tmpSty.put("TUNLS", "TUNLS");
		tmpSty.put("TUNNEL", "TUNL");
		tmpSty.put("TUNNELS", "TUNLS");
		tmpSty.put("TUNNL", "TUNL");
		tmpSty.put("TURNPIKE", "TPKE");
		tmpSty.put("TURNPK", "TPKE");
		tmpSty.put("UN", "UPAS");
		tmpSty.put("UNDERPASS", "UPAS");
		tmpSty.put("UNION", "UPAS");
		tmpSty.put("UNIONS", "UNS");
		tmpSty.put("UNS", "UNS");
		tmpSty.put("UPAS", "UNPA");
		tmpSty.put("VALLEY", "VLY");
		tmpSty.put("VALLEYS", "VLYS");
		tmpSty.put("VALLY", "VLY");
		tmpSty.put("VDCT", "VIA");
		tmpSty.put("VIA", "VIA");
		tmpSty.put("VIADCT", "VIA");
		tmpSty.put("VIADUCT", "VIA");
		tmpSty.put("VIEW", "VW");
		tmpSty.put("VIEWS", "VWS");
		tmpSty.put("VILL", "VLG");
		tmpSty.put("VILLAG", "VLG");
		tmpSty.put("VILLAGE", "VLG");
		tmpSty.put("VILLAGES", "VLGS");
		tmpSty.put("VILLE", "VLG");
		tmpSty.put("VILLG", "VLG");
		tmpSty.put("VILLIAGE", "VLG");
		tmpSty.put("VIS", "VIS");
		tmpSty.put("VIST", "VIS");
		tmpSty.put("VISTA", "VIS");
		tmpSty.put("VL", "VLG");
		tmpSty.put("VLG", "VLG");
		tmpSty.put("VLGS", "VLGS");
		tmpSty.put("VLLY", "VL");
		tmpSty.put("VLLYS", "VLS");
		tmpSty.put("VLY", "VLY");
		tmpSty.put("VLYS", "VLYS");
		tmpSty.put("VST", "VIS");
		tmpSty.put("VSTA", "VIS");
		tmpSty.put("VW", "VW");
		tmpSty.put("VWS", "VWS");
		tmpSty.put("WALK", "WALK");
		tmpSty.put("WALKS", "WALK");
		tmpSty.put("WAY", "WAY");
		tmpSty.put("WAYS", "WAYS");
		tmpSty.put("WELL", "WL");
		tmpSty.put("WELLS", "WLS");
		tmpSty.put("WL", "WL");
		tmpSty.put("WLS", "WLS");
		tmpSty.put("WY", "WAY");
		tmpSty.put("WYS", "WAYS");
		tmpSty.put("XING", "XING");
		tmpSty.put("XRD", "XRD");
		tmpSty.put("XRDS", "XRDS");
		USPS_STREET_TYPE = Collections.unmodifiableMap(tmpSty);
		Map<String, Integer> tmpNum = new HashMap<String, Integer>();
		tmpNum.put("", new Integer(0));
		tmpNum.put("ZERO", new Integer(0));
		tmpNum.put("ONE", new Integer(1));
		tmpNum.put("FIRST", new Integer(1));
		tmpNum.put("TWO", new Integer(2));
		tmpNum.put("SECOND", new Integer(2));
		tmpNum.put("THREE", new Integer(3));
		tmpNum.put("THIRD", new Integer(3));
		tmpNum.put("FOUR", new Integer(4));
		tmpNum.put("FOURTH", new Integer(4));
		tmpNum.put("FIVE", new Integer(5));
		tmpNum.put("FIFTH", new Integer(5));
		tmpNum.put("SIX", new Integer(6));
		tmpNum.put("SIXTH", new Integer(6));
		tmpNum.put("SEVEN", new Integer(7));
		tmpNum.put("SEVENTH", new Integer(7));
		tmpNum.put("EIGHT", new Integer(8));
		tmpNum.put("EIGHTH", new Integer(8));
		tmpNum.put("NINE", new Integer(9));
		tmpNum.put("NINTH", new Integer(9));
		ALPHA_NUMERIC = Collections.unmodifiableMap(tmpNum);
		Set<String> tmpNmw = new HashSet<String>();
		tmpNmw.add("ONE");
		tmpNmw.add("TWO");
		tmpNmw.add("THREE");
		tmpNmw.add("FOUR");
		tmpNmw.add("FIVE");
		tmpNmw.add("SIX");
		tmpNmw.add("SEVEN");
		tmpNmw.add("EIGHT");
		tmpNmw.add("NINE");
		tmpNmw.add("TEN");
		tmpNmw.add("ELEVEN");
		tmpNmw.add("TWELVE");
		tmpNmw.add("THIRTEEN");
		tmpNmw.add("FOURTEEN");
		tmpNmw.add("FIFTEEN");
		tmpNmw.add("SIXTEEN");
		tmpNmw.add("SEVENTEEN");
		tmpNmw.add("EIGHTEEN");
		tmpNmw.add("NINETEEN");
		tmpNmw.add("TWENTY");
		tmpNmw.add("THIRTY");
		tmpNmw.add("FOURTY");
		tmpNmw.add("FIFTY");
		tmpNmw.add("SIXTY");
		tmpNmw.add("SEVENTY");
		tmpNmw.add("EIGHTY");
		tmpNmw.add("NINETY");
		tmpNmw.add("HUNDRED");
		tmpNmw.add("THOUSAND");
		tmpNmw.add("MILLION");
		tmpNmw.add("BILLION");
		tmpNmw.add("TRILLION");
		tmpNmw.add("FIRST");
		tmpNmw.add("SECOND");
		tmpNmw.add("THIRD");
		tmpNmw.add("FOURTH");
		tmpNmw.add("FIFTH");
		tmpNmw.add("SIXTH");
		tmpNmw.add("SEVENTH");
		tmpNmw.add("EIGHTH");
		tmpNmw.add("NINETH");
		tmpNmw.add("TENTH");
		tmpNmw.add("ELEVENTH");
		tmpNmw.add("TWELFTH");
		tmpNmw.add("THIRTEENTH");
		tmpNmw.add("FOURTEENTH");
		tmpNmw.add("FIFTEENTH");
		tmpNmw.add("SIXTEENTH");
		tmpNmw.add("SEVENTEENTH");
		tmpNmw.add("EIGHTEENTH");
		tmpNmw.add("NINETEENTH");
		tmpNmw.add("TWENTIETH");
		tmpNmw.add("THIRTIETH");
		tmpNmw.add("FOURTIETH");
		tmpNmw.add("FIFTIETH");
		tmpNmw.add("SIXTIETH");
		tmpNmw.add("SEVENTIETH");
		tmpNmw.add("EIGHTIETH");
		tmpNmw.add("NINETIETH");
		tmpNmw.add("HUNDREDTH");
		tmpNmw.add("THOUSANDTH");
		tmpNmw.add("MILLIONTH");
		tmpNmw.add("BILLIONTH");
		tmpNmw.add("TRILLIONTH");
		NUMERIC_WORDS = Collections.unmodifiableSet(tmpNmw);
		Set<String> tmpState = new HashSet<String>();
		tmpState.add("AK");
		tmpState.add("AL");
		tmpState.add("AR");
		tmpState.add("AZ");
		tmpState.add("CA");
		tmpState.add("CO");
		tmpState.add("CT");
		tmpState.add("DC");
		tmpState.add("DE");
		tmpState.add("FL");
		tmpState.add("GA");
		tmpState.add("HI");
		tmpState.add("IA");
		tmpState.add("ID");
		tmpState.add("IL");
		tmpState.add("IN");
		tmpState.add("KS");
		tmpState.add("KY");
		tmpState.add("LA");
		tmpState.add("MA");
		tmpState.add("MD");
		tmpState.add("ME");
		tmpState.add("MI");
		tmpState.add("MN");
		tmpState.add("MO");
		tmpState.add("MS");
		tmpState.add("MT");
		tmpState.add("NC");
		tmpState.add("ND");
		tmpState.add("NE");
		tmpState.add("NH");
		tmpState.add("NJ");
		tmpState.add("NM");
		tmpState.add("NV");
		tmpState.add("NY");
		tmpState.add("OH");
		tmpState.add("OK");
		tmpState.add("OR");
		tmpState.add("PA");
		tmpState.add("RI");
		tmpState.add("SC");
		tmpState.add("SD");
		tmpState.add("TN");
		tmpState.add("TX");
		tmpState.add("UT");
		tmpState.add("VA");
		tmpState.add("VT");
		tmpState.add("WA");
		tmpState.add("WI");
		tmpState.add("WV");
		tmpState.add("WY");
		STATE = Collections.unmodifiableSet(tmpState);
		Set<String> tmpSts = new HashSet<String>();
		tmpSts.add("ST");
		tmpSts.add("ND");
		tmpSts.add("RD");
		tmpSts.add("TH");
		STREET_SUFFIX = Collections.unmodifiableSet(tmpSts);
		Set<String> rteSts = new HashSet<String>();
		rteSts.add("ROUT");
		rteSts.add("ROUTE");
		rteSts.add("RTE");
		rteSts.add("RT");
		ROUTE_ALIASES = Collections.unmodifiableSet(rteSts);
		Set<String> streetSts = new HashSet<String>();
		streetSts.add("NORTH");
		streetSts.add("SOUTH");
		streetSts.add("EAST");
		streetSts.add("WEST");
		streetSts.add("TOWER");
		STREET_NAMES_EXCL = Collections.unmodifiableSet(streetSts);
	}
}
